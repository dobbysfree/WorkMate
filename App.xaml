<Application x:Class="WorkMate.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:WorkMate"
             StartupUri="Views/MainView.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml"/>

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>


            <!--#region Window Title Font Size-->
            <sys:Double x:Key="WindowTitleFontSize">13</sys:Double>
            <!--#endregion-->

            <!--#region DataGrid Column Header -->
            <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="HeaderBold">
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="LightCyan" Offset="1"/>
                            <GradientStop Color="White"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->

            <!--#region RadioButton Style -->
            <Style TargetType="{x:Type RadioButton}" x:Key="RadioBtnStyle">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <BulletDecorator Cursor="Hand">
                                <BulletDecorator.Bullet>
                                    <Grid Height="16" Width="16">
                                        <Border Name="RadioOuter" Background="Transparent" BorderBrush="DimGray" BorderThickness="2" CornerRadius="2" />
                                        <Border CornerRadius="0" Margin="4" Name="RadioMark" Background="DarkSlateGray" Visibility="Hidden" />
                                    </Grid>
                                </BulletDecorator.Bullet>

                                <!--Text element-->
                                <TextBlock Margin="8,0" Foreground="DarkSlateGray" FontSize="12" VerticalAlignment="Center">
                                <ContentPresenter />
                                </TextBlock>
                            </BulletDecorator>

                            <!--If item is checked, trigger the visibility of the mark-->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <!--If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting-->
                                    <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="RadioOuter" Property="BorderBrush" Value="DarkSlateGray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->

            <!--#region DataGrid Value Style -->
            <Style TargetType="{x:Type TextBlock}" x:Key="RightCell">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="TextAlignment" Value="Right"/>
            </Style>

            <Style TargetType="{x:Type TextBlock}" x:Key="LeftCell">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="TextAlignment" Value="Left"/>
            </Style>

            <Style TargetType="{x:Type TextBlock}" x:Key="LeftCellWrap">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="TextAlignment" Value="Left"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
            </Style>

            <Style TargetType="{x:Type TextBlock}" x:Key="CenterCell">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="TextAlignment" Value="Center"/>
            </Style>

            <Style TargetType="{x:Type TextBox}" x:Key="DgTbEditCell">
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="AcceptsReturn" Value="True"/>
                <Setter Property="BorderThickness" Value="0"/>                
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="Transparent"/>
            </Style>
            <!--#endregion-->

            <!--<vc:ValueConverter x:Key="CvrtColorValue"/>
            <Style TargetType="TextBlock" x:Key="RightCellWithColor">
                <Setter Property="Foreground" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Text, Converter={StaticResource CvrtColorValue}}"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="TextAlignment" Value="Right"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Width" Value="100"/>
            </Style>-->

            <Style TargetType="{x:Type CheckBox}" x:Key="xStyleCheckbox">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Margin" Value="5,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <BulletDecorator Background="Transparent">
                                <BulletDecorator.Bullet>
                                    <Border x:Name="Border" Width="20" Height="20" VerticalAlignment="Center" CornerRadius="5" Background="#C0C0C0" BorderThickness="0" BorderBrush="White">
                                        <Path Width="7" Height="7" x:Name="CheckMark" SnapsToDevicePixels="False" Stroke="#404040" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                                    </Border>
                                </BulletDecorator.Bullet>
                                <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="false">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#808080" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                    <Setter Property="Foreground" Value="#888888"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>